#!groovy

properties([
        pipelineTriggers([cron('H 03 * * *')]),
        parameters([
                string(name: 'ENVIRONMENT', defaultValue: 'aat', description: 'Environment to test'),
                string(name: 'URL_TO_TEST', defaultValue: 'https://probate-orchestrator-service.service.core-compute-aat.internal', description: 'The URL you want to run these tests against'),
        ])
])

@Library("Infrastructure")

String product = "probate"
String component = "orchestrator-service"

List<LinkedHashMap<String, Object>> secrets = [
        secret('probatePersistenceUrl', 'TEST_PERSISTENCE_URL'),
        secret('probateBusinessUrl', 'TEST_BUSINESS_URL'),
        secret('s2sAuthTotpSecret', 'S2S_AUTH_TOTP_SECRET'),
        secret('probateIdamSecret', 'IDAM_SECRET'),
        secret('probateIdamUserName', 'IDAM_USERNAME'),
        secret('probateIdamPassword', 'IDAM_PASSWORD'),
        secret('probateCcdDataStoreApi', 'CCD_DATA_STORE_API_URL'),
        secret('serviceAuthProviderBaseUrl', 'SERVICE_AUTH_PROVIDER_BASE_URL'),
        secret('probateUserAuthUrl', 'USER_AUTH_PROVIDER_OAUTH2_URL'),
        secret('probateIdamOauthRedirectUrl', 'IDAM_OAUTH2_REDIRECT_URI'),
        secret('probate-mail-host', 'PROBATE_SUB_MAIL_HOST'),
        secret('probate-mail-username', 'PROBATE_SUB_MAIL_USERNAME'),
        secret('probate-mail-password', 'PROBATE_SUB_MAIL_PASSWORD'),
        secret('probate-mail-port', 'PROBATE_SUB_MAIL_PORT'),
        secret('probate-mail-sender', 'PROBATE_SUB_MAIL_SENDER'),
        secret('probate-mail-recipient', 'PROBATE_SUB_MAIL_REC')
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [ $class: 'AzureKeyVaultSecret',
    secretType: 'Secret',
    name: secretName,
    version: '',
    envVariable: envVar
  ]
}

withNightlyPipeline("nodejs", product, component) {
    env.TEST_URL = params.URL_TO_TEST
    env.TEST_E2E_URL = params.URL_TO_TEST
    setVaultName('probate')
    loadVaultSecrets(secrets)
    enableFullFunctionalTest()

    after('fullFunctionalTest') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functional-output/**/*'
    }

    //    enableSlackNotifications('#probate-devs')  // can be turned back on once the overnight functionality is working fully
}


