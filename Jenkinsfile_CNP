#!groovy

@Library("Infrastructure")

String product = "probate"
String component = "orchestrator-service"

List<LinkedHashMap<String, Object>> secrets = [
        secret('probatePersistenceUrl', 'TEST_PERSISTENCE_URL'),
        secret('probateBusinessUrl', 'TEST_BUSINESS_URL'),
        secret('s2sAuthTotpSecret', 'S2S_AUTH_TOTP_SECRET'),
        secret('probateIdamSecret', 'IDAM_SECRET'),
        secret('probateIdamUserName', 'IDAM_USERNAME'),
        secret('probateIdamPassword', 'IDAM_PASSWORD'),
        secret('probateCcdDataStoreApi', 'CCD_DATA_STORE_API_URL'),
        secret('serviceAuthProviderBaseUrl', 'SERVICE_AUTH_PROVIDER_BASE_URL'),
        secret('probateUserAuthUrl', 'USER_AUTH_PROVIDER_OAUTH2_URL'),
        secret('probateIdamOauthRedirectUrl', 'IDAM_OAUTH2_REDIRECT_URI'),
        secret('probate-mail-host', 'PROBATE_SUB_MAIL_HOST'),
        secret('probate-mail-username', 'PROBATE_SUB_MAIL_USERNAME'),
        secret('probate-mail-password', 'PROBATE_SUB_MAIL_PASSWORD'),
        secret('probate-mail-port', 'PROBATE_SUB_MAIL_PORT'),
        secret('probate-mail-sender', 'PROBATE_SUB_MAIL_SENDER'),
        secret('probate-mail-recipient', 'PROBATE_SUB_MAIL_REC')
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [ $class: 'AzureKeyVaultSecret',
    secretType: 'Secret',
    name: secretName,
    version: '',
    envVariable: envVar
  ]
}

withPipeline("java", product, component) {
  setVaultName('probate')
  env.PACT_BROKER_URL = "url"
  loadVaultSecrets(secrets)
  enableSlackNotifications('#probate-jenkins')
  enableDockerBuild()
  enableDeployToAKS()

  before('buildinfra:prod') {
    error 'Deliberately breaking pipeline to prevent prod deployment'
  }

